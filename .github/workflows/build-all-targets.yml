name: Build, test all targets

env:
  DEBUG: napi:*
  APP_NAME: gulp-grass-sass
  
on:
  workflow_dispatch:

jobs:
  build:
    name: build-${{ matrix.target }}
    env: 
      TARGET: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          #- target: aarch64-apple-darwin
          #  os: macos-latest
          #- target: x86_64-apple-darwin
          #  os: macos-12     
          #- target: aarch64-unknown-linux-gnu
          #  os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest      
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest      
          #- target: x86_64-pc-windows-msvc 
          #  os: windows-latest                  
    steps:   
      - uses: actions/checkout@v4.1.7
      
      - name: Install Node.JS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
                  
      - uses: bahmutov/npm-install@v1.6.0
      
      - name: Build binaries
        run: npm run build -- --target ${{ matrix.target }}
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: bindings-${{ matrix.target }}
          path: ${{ github.workspace }}/**/*.node
          if-no-files-found: error

  test-macos-windows:
    if: false
    name: test-${{ matrix.target }}-node${{ matrix.node }}
    needs:
      - build
      
    env: 
      TARGET: ${{ matrix.target }}

    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:      
        node: ['18','20']
        os: [windows-latest,macos-12,macos-latest]
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest            
          - target: x86_64-apple-darwin
            os: macos-12
          - target: aarch64-apple-darwin
            os: macos-latest
    steps:
      - uses: actions/checkout@v4.1.7    
      
      - name: Install Node.JS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}
          
      - uses: bahmutov/npm-install@v1.6.0
      
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ env.TARGET }}
          path: .
          
      - name: List packages
        run: ls -R .
        shell: bash
        
      - name: Test bindings
        run: npm run test

  test-linux:
    name: test-${{ matrix.target }}-node${{ matrix.node }}
    runs-on: ubuntu-latest      
    needs:
      - build         
    env: 
      TARGET: ${{ matrix.target }}      
    strategy:
      fail-fast: false
      matrix:
        node: ['18','20']
        target: [x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4.1.7       
      - name: Install Node.JS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}
      - name: NPM Install with Caching (non-Alpine)
        if: "!contains(matrix.docker_image, 'alpine')"
        uses: bahmutov/npm-install@v1.6.0
      - name: NPM Install without Caching (Alpine)
        if: "contains(matrix.docker_image, 'alpine')"
        run: npm install    
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ env.TARGET }}
          path: .          
      - name: List packages
        run: ls -R .      
      - name: Test bindings
        run: npm run test

  test-linux-docker:
    name: test-${{ matrix.target }}-node${{ matrix.node }}
    runs-on: ubuntu-latest      
    needs:
      - build         
    env: 
      TARGET: ${{ matrix.target }}      
    strategy:
      fail-fast: false
      matrix:
        include:
          - node: '18'
            target: x86_64-unknown-linux-gnu
            docker_image: "node:18-buster"
          - node: '18'
            target: x86_64-unknown-linux-musl
            docker_image: "node:18-alpine"
          - node: '20'
            target: x86_64-unknown-linux-gnu
            docker_image: "node:20-buster"
          - node: '20'
            target: x86_64-unknown-linux-musl
            docker_image: "node:20-alpine"                      
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - uses: actions/checkout@v4.1.7       
      - name: NPM Install with Caching (non-Alpine)
        if: "!contains(matrix.docker_image, 'alpine')"
        uses: bahmutov/npm-install@v1.6.0
      - name: NPM Install without Caching (Alpine)
        if: "contains(matrix.docker_image, 'alpine')"
        run: npm install    
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ env.TARGET }}
          path: .          
      - name: Check GLIBC version
        run: ldd --version
      - name: List packages
        run: ls -R .      
      - name: Test bindings
        run: npm run test
