name: Build, Test, Publish
 
on:
  workflow_dispatch:

jobs:
  build:
    name: build-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-12
          #- target: aarch64-unknown-linux-gnu
          #  os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest      
          # musl disabled because it i was not able to launch grass there so far
          #- target: x86_64-unknown-linux-musl
          #  os: ubuntu-latest      
          - target: x86_64-pc-windows-msvc 
            os: windows-latest                  
    steps:   
      - uses: actions/checkout@v4.1.7      
      - name: install Node18
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}                
      - uses: bahmutov/npm-install@v1.6.0      
      - name: Build binaries
        run: npm run build -- --target ${{ matrix.target }}        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: bindings-${{ matrix.target }}
          path: ${{ github.workspace }}/**/*.node
          if-no-files-found: error

  test-macos-windows:    
    name: test-${{ matrix.target }}-node${{ matrix.node }}
    needs:
      - build      
    runs-on: ${{ matrix.os }}    
    strategy:
      fail-fast: false
      matrix:      
        node: ['18','20']
        os: [windows-latest,macos-12,macos-latest]
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest            
          - target: x86_64-apple-darwin
            os: macos-12
          - target: aarch64-apple-darwin
            os: macos-latest
    steps:
      - uses: actions/checkout@v4.1.7          
      - name: Install Node.JS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}          
      - uses: bahmutov/npm-install@v1.6.0      
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ matrix.target }}
          path: .          
      - name: List packages
        run: ls -R .
        shell: bash        
      - name: Test bindings
        run: npm run test

  test-ubuntu:
    name: test-${{ matrix.target }}-node${{ matrix.node }}
    runs-on: ubuntu-latest      
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        node: ['18','20']
        target: [x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4.1.7       
      - name: Install Node.JS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}
      - name: NPM Install with Caching (non-Alpine)
        if: "!contains(matrix.docker_image, 'alpine')"
        uses: bahmutov/npm-install@v1.6.0
      - name: NPM Install without Caching (Alpine)
        if: "contains(matrix.docker_image, 'alpine')"
        run: npm install    
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ matrix.target }}
          path: .          
      - name: List packages
        run: ls -R .      
      - name: Test bindings
        run: npm run test

  test-linux-docker:
    name: test-${{ matrix.target }}-node${{ matrix.node }}
    runs-on: ubuntu-latest      
    needs:
      - build    
    strategy:
      fail-fast: false
      matrix:
        include:
          - node: '18'
            target: x86_64-unknown-linux-gnu
            docker_image: "node:18-bookworm" # debian 13
          - node: '20'
            target: x86_64-unknown-linux-gnu
            docker_image: "node:20-bookworm" # debian 13
          # musl disabled because it i was not able to launch grass there so far
          #- node: '18'
          #  target: x86_64-unknown-linux-musl
          #  docker_image: "node:18-alpine"
          #- node: '20'
          #  target: x86_64-unknown-linux-musl
          #  docker_image: "node:20-alpine"                      
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - uses: actions/checkout@v4.1.7       
      - name: NPM Install with Caching (non-Alpine)
        if: "!contains(matrix.docker_image, 'alpine')"
        uses: bahmutov/npm-install@v1.6.0
      - name: NPM Install without Caching (Alpine)
        if: "contains(matrix.docker_image, 'alpine')"
        run: npm install    
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ matrix.target }}
          path: .          
      - name: List packages
        run: ls -R .      
      - name: Test bindings
        run: npm run test

  merge-universal-macos:
    if: false # permanently disabled but kept maybe for later?
    name: Build universal macOS binary
    needs:
      - build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4.1.7       
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 18  
      - uses: bahmutov/npm-install@v1.6.0          
      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-x86_64-apple-darwin
          path: artifacts
      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-aarch64-apple-darwin
          path: artifacts
      - name: Combine binaries
        run: npm run universal
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: bindings-universal-apple-darwin
          path: ${{ github.workspace }}/**/*.node
          if-no-files-found: error
  
  publish-dependencies:
    name: Publish ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs:
      - test-macos-windows
      - test-ubuntu
      - test-linux-docker   
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            package: ./npm/darwin-arm64
          - target: x86_64-apple-darwin
            package: ./npm/darwin-x64
          - target: x86_64-unknown-linux-gnu
            package: ./npm/linux-x64-gnu        
          - target: x86_64-pc-windows-msvc 
            package: ./npm/win32-x64-msvc   
    steps:
      - uses: actions/checkout@v4.1.7       
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 18  
      - uses: bahmutov/npm-install@v1.6.0    
      - name: Download ${{ matrix.target }}
        uses: actions/download-artifact@v4.1.7
        with:
          name: bindings-${{ matrix.target }}
          path: ${{ matrix.package }}
      - name: List ${{ matrix.package }}
        run: ls -R ${{ matrix.package }}        
      - name: NPM Publish ${{ matrix.package }}
        uses: JS-DevTools/npm-publish@v3.1.1
        with:
          package: ${{ matrix.package }}
          token:  ${{ secrets.NPM_TOKEN }}
          access: public          
          
  publish:
    name: Publish gulp-grass-sass to NPM
    runs-on: ubuntu-latest
    needs:
      - publish-dependencies
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4.1.7       
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: 18  
      - uses: bahmutov/npm-install@v1.6.0    
      - name: Download all artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          path: artifacts
      - name: Move artifacts
        run: npm run artifacts
      - name: List packages
        run: ls -R ./npm            
      - name: NPM Publish
        uses: JS-DevTools/npm-publish@v3.1.1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
          provenance: true
